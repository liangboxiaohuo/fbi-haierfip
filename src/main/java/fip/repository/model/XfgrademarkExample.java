package fip.repository.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class XfgrademarkExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table XFGRADEMARK
     *
     * @mbggenerated Fri Jul 22 13:32:19 CST 2011
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table XFGRADEMARK
     *
     * @mbggenerated Fri Jul 22 13:32:19 CST 2011
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table XFGRADEMARK
     *
     * @mbggenerated Fri Jul 22 13:32:19 CST 2011
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table XFGRADEMARK
     *
     * @mbggenerated Fri Jul 22 13:32:19 CST 2011
     */
    public XfgrademarkExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table XFGRADEMARK
     *
     * @mbggenerated Fri Jul 22 13:32:19 CST 2011
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table XFGRADEMARK
     *
     * @mbggenerated Fri Jul 22 13:32:19 CST 2011
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table XFGRADEMARK
     *
     * @mbggenerated Fri Jul 22 13:32:19 CST 2011
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table XFGRADEMARK
     *
     * @mbggenerated Fri Jul 22 13:32:19 CST 2011
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table XFGRADEMARK
     *
     * @mbggenerated Fri Jul 22 13:32:19 CST 2011
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table XFGRADEMARK
     *
     * @mbggenerated Fri Jul 22 13:32:19 CST 2011
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table XFGRADEMARK
     *
     * @mbggenerated Fri Jul 22 13:32:19 CST 2011
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table XFGRADEMARK
     *
     * @mbggenerated Fri Jul 22 13:32:19 CST 2011
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table XFGRADEMARK
     *
     * @mbggenerated Fri Jul 22 13:32:19 CST 2011
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table XFGRADEMARK
     *
     * @mbggenerated Fri Jul 22 13:32:19 CST 2011
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table XFGRADEMARK
     *
     * @mbggenerated Fri Jul 22 13:32:19 CST 2011
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andSeqnoIsNull() {
            addCriterion("SEQNO is null");
            return (Criteria) this;
        }

        public Criteria andSeqnoIsNotNull() {
            addCriterion("SEQNO is not null");
            return (Criteria) this;
        }

        public Criteria andSeqnoEqualTo(BigDecimal value) {
            addCriterion("SEQNO =", value, "seqno");
            return (Criteria) this;
        }

        public Criteria andSeqnoNotEqualTo(BigDecimal value) {
            addCriterion("SEQNO <>", value, "seqno");
            return (Criteria) this;
        }

        public Criteria andSeqnoGreaterThan(BigDecimal value) {
            addCriterion("SEQNO >", value, "seqno");
            return (Criteria) this;
        }

        public Criteria andSeqnoGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("SEQNO >=", value, "seqno");
            return (Criteria) this;
        }

        public Criteria andSeqnoLessThan(BigDecimal value) {
            addCriterion("SEQNO <", value, "seqno");
            return (Criteria) this;
        }

        public Criteria andSeqnoLessThanOrEqualTo(BigDecimal value) {
            addCriterion("SEQNO <=", value, "seqno");
            return (Criteria) this;
        }

        public Criteria andSeqnoIn(List<BigDecimal> values) {
            addCriterion("SEQNO in", values, "seqno");
            return (Criteria) this;
        }

        public Criteria andSeqnoNotIn(List<BigDecimal> values) {
            addCriterion("SEQNO not in", values, "seqno");
            return (Criteria) this;
        }

        public Criteria andSeqnoBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SEQNO between", value1, value2, "seqno");
            return (Criteria) this;
        }

        public Criteria andSeqnoNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("SEQNO not between", value1, value2, "seqno");
            return (Criteria) this;
        }

        public Criteria andEnumtpIsNull() {
            addCriterion("ENUMTP is null");
            return (Criteria) this;
        }

        public Criteria andEnumtpIsNotNull() {
            addCriterion("ENUMTP is not null");
            return (Criteria) this;
        }

        public Criteria andEnumtpEqualTo(String value) {
            addCriterion("ENUMTP =", value, "enumtp");
            return (Criteria) this;
        }

        public Criteria andEnumtpNotEqualTo(String value) {
            addCriterion("ENUMTP <>", value, "enumtp");
            return (Criteria) this;
        }

        public Criteria andEnumtpGreaterThan(String value) {
            addCriterion("ENUMTP >", value, "enumtp");
            return (Criteria) this;
        }

        public Criteria andEnumtpGreaterThanOrEqualTo(String value) {
            addCriterion("ENUMTP >=", value, "enumtp");
            return (Criteria) this;
        }

        public Criteria andEnumtpLessThan(String value) {
            addCriterion("ENUMTP <", value, "enumtp");
            return (Criteria) this;
        }

        public Criteria andEnumtpLessThanOrEqualTo(String value) {
            addCriterion("ENUMTP <=", value, "enumtp");
            return (Criteria) this;
        }

        public Criteria andEnumtpLike(String value) {
            addCriterion("ENUMTP like", value, "enumtp");
            return (Criteria) this;
        }

        public Criteria andEnumtpNotLike(String value) {
            addCriterion("ENUMTP not like", value, "enumtp");
            return (Criteria) this;
        }

        public Criteria andEnumtpIn(List<String> values) {
            addCriterion("ENUMTP in", values, "enumtp");
            return (Criteria) this;
        }

        public Criteria andEnumtpNotIn(List<String> values) {
            addCriterion("ENUMTP not in", values, "enumtp");
            return (Criteria) this;
        }

        public Criteria andEnumtpBetween(String value1, String value2) {
            addCriterion("ENUMTP between", value1, value2, "enumtp");
            return (Criteria) this;
        }

        public Criteria andEnumtpNotBetween(String value1, String value2) {
            addCriterion("ENUMTP not between", value1, value2, "enumtp");
            return (Criteria) this;
        }

        public Criteria andEnumvalIsNull() {
            addCriterion("ENUMVAL is null");
            return (Criteria) this;
        }

        public Criteria andEnumvalIsNotNull() {
            addCriterion("ENUMVAL is not null");
            return (Criteria) this;
        }

        public Criteria andEnumvalEqualTo(String value) {
            addCriterion("ENUMVAL =", value, "enumval");
            return (Criteria) this;
        }

        public Criteria andEnumvalNotEqualTo(String value) {
            addCriterion("ENUMVAL <>", value, "enumval");
            return (Criteria) this;
        }

        public Criteria andEnumvalGreaterThan(String value) {
            addCriterion("ENUMVAL >", value, "enumval");
            return (Criteria) this;
        }

        public Criteria andEnumvalGreaterThanOrEqualTo(String value) {
            addCriterion("ENUMVAL >=", value, "enumval");
            return (Criteria) this;
        }

        public Criteria andEnumvalLessThan(String value) {
            addCriterion("ENUMVAL <", value, "enumval");
            return (Criteria) this;
        }

        public Criteria andEnumvalLessThanOrEqualTo(String value) {
            addCriterion("ENUMVAL <=", value, "enumval");
            return (Criteria) this;
        }

        public Criteria andEnumvalLike(String value) {
            addCriterion("ENUMVAL like", value, "enumval");
            return (Criteria) this;
        }

        public Criteria andEnumvalNotLike(String value) {
            addCriterion("ENUMVAL not like", value, "enumval");
            return (Criteria) this;
        }

        public Criteria andEnumvalIn(List<String> values) {
            addCriterion("ENUMVAL in", values, "enumval");
            return (Criteria) this;
        }

        public Criteria andEnumvalNotIn(List<String> values) {
            addCriterion("ENUMVAL not in", values, "enumval");
            return (Criteria) this;
        }

        public Criteria andEnumvalBetween(String value1, String value2) {
            addCriterion("ENUMVAL between", value1, value2, "enumval");
            return (Criteria) this;
        }

        public Criteria andEnumvalNotBetween(String value1, String value2) {
            addCriterion("ENUMVAL not between", value1, value2, "enumval");
            return (Criteria) this;
        }

        public Criteria andConditionIsNull() {
            addCriterion("CONDITION is null");
            return (Criteria) this;
        }

        public Criteria andConditionIsNotNull() {
            addCriterion("CONDITION is not null");
            return (Criteria) this;
        }

        public Criteria andConditionEqualTo(String value) {
            addCriterion("CONDITION =", value, "condition");
            return (Criteria) this;
        }

        public Criteria andConditionNotEqualTo(String value) {
            addCriterion("CONDITION <>", value, "condition");
            return (Criteria) this;
        }

        public Criteria andConditionGreaterThan(String value) {
            addCriterion("CONDITION >", value, "condition");
            return (Criteria) this;
        }

        public Criteria andConditionGreaterThanOrEqualTo(String value) {
            addCriterion("CONDITION >=", value, "condition");
            return (Criteria) this;
        }

        public Criteria andConditionLessThan(String value) {
            addCriterion("CONDITION <", value, "condition");
            return (Criteria) this;
        }

        public Criteria andConditionLessThanOrEqualTo(String value) {
            addCriterion("CONDITION <=", value, "condition");
            return (Criteria) this;
        }

        public Criteria andConditionLike(String value) {
            addCriterion("CONDITION like", value, "condition");
            return (Criteria) this;
        }

        public Criteria andConditionNotLike(String value) {
            addCriterion("CONDITION not like", value, "condition");
            return (Criteria) this;
        }

        public Criteria andConditionIn(List<String> values) {
            addCriterion("CONDITION in", values, "condition");
            return (Criteria) this;
        }

        public Criteria andConditionNotIn(List<String> values) {
            addCriterion("CONDITION not in", values, "condition");
            return (Criteria) this;
        }

        public Criteria andConditionBetween(String value1, String value2) {
            addCriterion("CONDITION between", value1, value2, "condition");
            return (Criteria) this;
        }

        public Criteria andConditionNotBetween(String value1, String value2) {
            addCriterion("CONDITION not between", value1, value2, "condition");
            return (Criteria) this;
        }

        public Criteria andGradeIsNull() {
            addCriterion("GRADE is null");
            return (Criteria) this;
        }

        public Criteria andGradeIsNotNull() {
            addCriterion("GRADE is not null");
            return (Criteria) this;
        }

        public Criteria andGradeEqualTo(String value) {
            addCriterion("GRADE =", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeNotEqualTo(String value) {
            addCriterion("GRADE <>", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeGreaterThan(String value) {
            addCriterion("GRADE >", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeGreaterThanOrEqualTo(String value) {
            addCriterion("GRADE >=", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeLessThan(String value) {
            addCriterion("GRADE <", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeLessThanOrEqualTo(String value) {
            addCriterion("GRADE <=", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeLike(String value) {
            addCriterion("GRADE like", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeNotLike(String value) {
            addCriterion("GRADE not like", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeIn(List<String> values) {
            addCriterion("GRADE in", values, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeNotIn(List<String> values) {
            addCriterion("GRADE not in", values, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeBetween(String value1, String value2) {
            addCriterion("GRADE between", value1, value2, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeNotBetween(String value1, String value2) {
            addCriterion("GRADE not between", value1, value2, "grade");
            return (Criteria) this;
        }

        public Criteria andSampleIsNull() {
            addCriterion("SAMPLE is null");
            return (Criteria) this;
        }

        public Criteria andSampleIsNotNull() {
            addCriterion("SAMPLE is not null");
            return (Criteria) this;
        }

        public Criteria andSampleEqualTo(String value) {
            addCriterion("SAMPLE =", value, "sample");
            return (Criteria) this;
        }

        public Criteria andSampleNotEqualTo(String value) {
            addCriterion("SAMPLE <>", value, "sample");
            return (Criteria) this;
        }

        public Criteria andSampleGreaterThan(String value) {
            addCriterion("SAMPLE >", value, "sample");
            return (Criteria) this;
        }

        public Criteria andSampleGreaterThanOrEqualTo(String value) {
            addCriterion("SAMPLE >=", value, "sample");
            return (Criteria) this;
        }

        public Criteria andSampleLessThan(String value) {
            addCriterion("SAMPLE <", value, "sample");
            return (Criteria) this;
        }

        public Criteria andSampleLessThanOrEqualTo(String value) {
            addCriterion("SAMPLE <=", value, "sample");
            return (Criteria) this;
        }

        public Criteria andSampleLike(String value) {
            addCriterion("SAMPLE like", value, "sample");
            return (Criteria) this;
        }

        public Criteria andSampleNotLike(String value) {
            addCriterion("SAMPLE not like", value, "sample");
            return (Criteria) this;
        }

        public Criteria andSampleIn(List<String> values) {
            addCriterion("SAMPLE in", values, "sample");
            return (Criteria) this;
        }

        public Criteria andSampleNotIn(List<String> values) {
            addCriterion("SAMPLE not in", values, "sample");
            return (Criteria) this;
        }

        public Criteria andSampleBetween(String value1, String value2) {
            addCriterion("SAMPLE between", value1, value2, "sample");
            return (Criteria) this;
        }

        public Criteria andSampleNotBetween(String value1, String value2) {
            addCriterion("SAMPLE not between", value1, value2, "sample");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table XFGRADEMARK
     *
     * @mbggenerated do_not_delete_during_merge Fri Jul 22 13:32:19 CST 2011
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table XFGRADEMARK
     *
     * @mbggenerated Fri Jul 22 13:32:19 CST 2011
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}