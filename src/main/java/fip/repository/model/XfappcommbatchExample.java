package fip.repository.model;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class XfappcommbatchExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table FIP.XFAPPCOMMBATCH
     *
     * @mbggenerated Sat Aug 13 21:38:48 CST 2011
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table FIP.XFAPPCOMMBATCH
     *
     * @mbggenerated Sat Aug 13 21:38:48 CST 2011
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table FIP.XFAPPCOMMBATCH
     *
     * @mbggenerated Sat Aug 13 21:38:48 CST 2011
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FIP.XFAPPCOMMBATCH
     *
     * @mbggenerated Sat Aug 13 21:38:48 CST 2011
     */
    public XfappcommbatchExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FIP.XFAPPCOMMBATCH
     *
     * @mbggenerated Sat Aug 13 21:38:48 CST 2011
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FIP.XFAPPCOMMBATCH
     *
     * @mbggenerated Sat Aug 13 21:38:48 CST 2011
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FIP.XFAPPCOMMBATCH
     *
     * @mbggenerated Sat Aug 13 21:38:48 CST 2011
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FIP.XFAPPCOMMBATCH
     *
     * @mbggenerated Sat Aug 13 21:38:48 CST 2011
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FIP.XFAPPCOMMBATCH
     *
     * @mbggenerated Sat Aug 13 21:38:48 CST 2011
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FIP.XFAPPCOMMBATCH
     *
     * @mbggenerated Sat Aug 13 21:38:48 CST 2011
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FIP.XFAPPCOMMBATCH
     *
     * @mbggenerated Sat Aug 13 21:38:48 CST 2011
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FIP.XFAPPCOMMBATCH
     *
     * @mbggenerated Sat Aug 13 21:38:48 CST 2011
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FIP.XFAPPCOMMBATCH
     *
     * @mbggenerated Sat Aug 13 21:38:48 CST 2011
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table FIP.XFAPPCOMMBATCH
     *
     * @mbggenerated Sat Aug 13 21:38:48 CST 2011
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table FIP.XFAPPCOMMBATCH
     *
     * @mbggenerated Sat Aug 13 21:38:48 CST 2011
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andAppnoIsNull() {
            addCriterion("APPNO is null");
            return (Criteria) this;
        }

        public Criteria andAppnoIsNotNull() {
            addCriterion("APPNO is not null");
            return (Criteria) this;
        }

        public Criteria andAppnoEqualTo(String value) {
            addCriterion("APPNO =", value, "appno");
            return (Criteria) this;
        }

        public Criteria andAppnoNotEqualTo(String value) {
            addCriterion("APPNO <>", value, "appno");
            return (Criteria) this;
        }

        public Criteria andAppnoGreaterThan(String value) {
            addCriterion("APPNO >", value, "appno");
            return (Criteria) this;
        }

        public Criteria andAppnoGreaterThanOrEqualTo(String value) {
            addCriterion("APPNO >=", value, "appno");
            return (Criteria) this;
        }

        public Criteria andAppnoLessThan(String value) {
            addCriterion("APPNO <", value, "appno");
            return (Criteria) this;
        }

        public Criteria andAppnoLessThanOrEqualTo(String value) {
            addCriterion("APPNO <=", value, "appno");
            return (Criteria) this;
        }

        public Criteria andAppnoLike(String value) {
            addCriterion("APPNO like", value, "appno");
            return (Criteria) this;
        }

        public Criteria andAppnoNotLike(String value) {
            addCriterion("APPNO not like", value, "appno");
            return (Criteria) this;
        }

        public Criteria andAppnoIn(List<String> values) {
            addCriterion("APPNO in", values, "appno");
            return (Criteria) this;
        }

        public Criteria andAppnoNotIn(List<String> values) {
            addCriterion("APPNO not in", values, "appno");
            return (Criteria) this;
        }

        public Criteria andAppnoBetween(String value1, String value2) {
            addCriterion("APPNO between", value1, value2, "appno");
            return (Criteria) this;
        }

        public Criteria andAppnoNotBetween(String value1, String value2) {
            addCriterion("APPNO not between", value1, value2, "appno");
            return (Criteria) this;
        }

        public Criteria andCommnoIsNull() {
            addCriterion("COMMNO is null");
            return (Criteria) this;
        }

        public Criteria andCommnoIsNotNull() {
            addCriterion("COMMNO is not null");
            return (Criteria) this;
        }

        public Criteria andCommnoEqualTo(String value) {
            addCriterion("COMMNO =", value, "commno");
            return (Criteria) this;
        }

        public Criteria andCommnoNotEqualTo(String value) {
            addCriterion("COMMNO <>", value, "commno");
            return (Criteria) this;
        }

        public Criteria andCommnoGreaterThan(String value) {
            addCriterion("COMMNO >", value, "commno");
            return (Criteria) this;
        }

        public Criteria andCommnoGreaterThanOrEqualTo(String value) {
            addCriterion("COMMNO >=", value, "commno");
            return (Criteria) this;
        }

        public Criteria andCommnoLessThan(String value) {
            addCriterion("COMMNO <", value, "commno");
            return (Criteria) this;
        }

        public Criteria andCommnoLessThanOrEqualTo(String value) {
            addCriterion("COMMNO <=", value, "commno");
            return (Criteria) this;
        }

        public Criteria andCommnoLike(String value) {
            addCriterion("COMMNO like", value, "commno");
            return (Criteria) this;
        }

        public Criteria andCommnoNotLike(String value) {
            addCriterion("COMMNO not like", value, "commno");
            return (Criteria) this;
        }

        public Criteria andCommnoIn(List<String> values) {
            addCriterion("COMMNO in", values, "commno");
            return (Criteria) this;
        }

        public Criteria andCommnoNotIn(List<String> values) {
            addCriterion("COMMNO not in", values, "commno");
            return (Criteria) this;
        }

        public Criteria andCommnoBetween(String value1, String value2) {
            addCriterion("COMMNO between", value1, value2, "commno");
            return (Criteria) this;
        }

        public Criteria andCommnoNotBetween(String value1, String value2) {
            addCriterion("COMMNO not between", value1, value2, "commno");
            return (Criteria) this;
        }

        public Criteria andCommnmtypeIsNull() {
            addCriterion("COMMNMTYPE is null");
            return (Criteria) this;
        }

        public Criteria andCommnmtypeIsNotNull() {
            addCriterion("COMMNMTYPE is not null");
            return (Criteria) this;
        }

        public Criteria andCommnmtypeEqualTo(String value) {
            addCriterion("COMMNMTYPE =", value, "commnmtype");
            return (Criteria) this;
        }

        public Criteria andCommnmtypeNotEqualTo(String value) {
            addCriterion("COMMNMTYPE <>", value, "commnmtype");
            return (Criteria) this;
        }

        public Criteria andCommnmtypeGreaterThan(String value) {
            addCriterion("COMMNMTYPE >", value, "commnmtype");
            return (Criteria) this;
        }

        public Criteria andCommnmtypeGreaterThanOrEqualTo(String value) {
            addCriterion("COMMNMTYPE >=", value, "commnmtype");
            return (Criteria) this;
        }

        public Criteria andCommnmtypeLessThan(String value) {
            addCriterion("COMMNMTYPE <", value, "commnmtype");
            return (Criteria) this;
        }

        public Criteria andCommnmtypeLessThanOrEqualTo(String value) {
            addCriterion("COMMNMTYPE <=", value, "commnmtype");
            return (Criteria) this;
        }

        public Criteria andCommnmtypeLike(String value) {
            addCriterion("COMMNMTYPE like", value, "commnmtype");
            return (Criteria) this;
        }

        public Criteria andCommnmtypeNotLike(String value) {
            addCriterion("COMMNMTYPE not like", value, "commnmtype");
            return (Criteria) this;
        }

        public Criteria andCommnmtypeIn(List<String> values) {
            addCriterion("COMMNMTYPE in", values, "commnmtype");
            return (Criteria) this;
        }

        public Criteria andCommnmtypeNotIn(List<String> values) {
            addCriterion("COMMNMTYPE not in", values, "commnmtype");
            return (Criteria) this;
        }

        public Criteria andCommnmtypeBetween(String value1, String value2) {
            addCriterion("COMMNMTYPE between", value1, value2, "commnmtype");
            return (Criteria) this;
        }

        public Criteria andCommnmtypeNotBetween(String value1, String value2) {
            addCriterion("COMMNMTYPE not between", value1, value2, "commnmtype");
            return (Criteria) this;
        }

        public Criteria andNumIsNull() {
            addCriterion("NUM is null");
            return (Criteria) this;
        }

        public Criteria andNumIsNotNull() {
            addCriterion("NUM is not null");
            return (Criteria) this;
        }

        public Criteria andNumEqualTo(String value) {
            addCriterion("NUM =", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumNotEqualTo(String value) {
            addCriterion("NUM <>", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumGreaterThan(String value) {
            addCriterion("NUM >", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumGreaterThanOrEqualTo(String value) {
            addCriterion("NUM >=", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumLessThan(String value) {
            addCriterion("NUM <", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumLessThanOrEqualTo(String value) {
            addCriterion("NUM <=", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumLike(String value) {
            addCriterion("NUM like", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumNotLike(String value) {
            addCriterion("NUM not like", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumIn(List<String> values) {
            addCriterion("NUM in", values, "num");
            return (Criteria) this;
        }

        public Criteria andNumNotIn(List<String> values) {
            addCriterion("NUM not in", values, "num");
            return (Criteria) this;
        }

        public Criteria andNumBetween(String value1, String value2) {
            addCriterion("NUM between", value1, value2, "num");
            return (Criteria) this;
        }

        public Criteria andNumNotBetween(String value1, String value2) {
            addCriterion("NUM not between", value1, value2, "num");
            return (Criteria) this;
        }

        public Criteria andAmtIsNull() {
            addCriterion("AMT is null");
            return (Criteria) this;
        }

        public Criteria andAmtIsNotNull() {
            addCriterion("AMT is not null");
            return (Criteria) this;
        }

        public Criteria andAmtEqualTo(BigDecimal value) {
            addCriterion("AMT =", value, "amt");
            return (Criteria) this;
        }

        public Criteria andAmtNotEqualTo(BigDecimal value) {
            addCriterion("AMT <>", value, "amt");
            return (Criteria) this;
        }

        public Criteria andAmtGreaterThan(BigDecimal value) {
            addCriterion("AMT >", value, "amt");
            return (Criteria) this;
        }

        public Criteria andAmtGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("AMT >=", value, "amt");
            return (Criteria) this;
        }

        public Criteria andAmtLessThan(BigDecimal value) {
            addCriterion("AMT <", value, "amt");
            return (Criteria) this;
        }

        public Criteria andAmtLessThanOrEqualTo(BigDecimal value) {
            addCriterion("AMT <=", value, "amt");
            return (Criteria) this;
        }

        public Criteria andAmtIn(List<BigDecimal> values) {
            addCriterion("AMT in", values, "amt");
            return (Criteria) this;
        }

        public Criteria andAmtNotIn(List<BigDecimal> values) {
            addCriterion("AMT not in", values, "amt");
            return (Criteria) this;
        }

        public Criteria andAmtBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("AMT between", value1, value2, "amt");
            return (Criteria) this;
        }

        public Criteria andAmtNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("AMT not between", value1, value2, "amt");
            return (Criteria) this;
        }

        public Criteria andReceiveamtIsNull() {
            addCriterion("RECEIVEAMT is null");
            return (Criteria) this;
        }

        public Criteria andReceiveamtIsNotNull() {
            addCriterion("RECEIVEAMT is not null");
            return (Criteria) this;
        }

        public Criteria andReceiveamtEqualTo(BigDecimal value) {
            addCriterion("RECEIVEAMT =", value, "receiveamt");
            return (Criteria) this;
        }

        public Criteria andReceiveamtNotEqualTo(BigDecimal value) {
            addCriterion("RECEIVEAMT <>", value, "receiveamt");
            return (Criteria) this;
        }

        public Criteria andReceiveamtGreaterThan(BigDecimal value) {
            addCriterion("RECEIVEAMT >", value, "receiveamt");
            return (Criteria) this;
        }

        public Criteria andReceiveamtGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("RECEIVEAMT >=", value, "receiveamt");
            return (Criteria) this;
        }

        public Criteria andReceiveamtLessThan(BigDecimal value) {
            addCriterion("RECEIVEAMT <", value, "receiveamt");
            return (Criteria) this;
        }

        public Criteria andReceiveamtLessThanOrEqualTo(BigDecimal value) {
            addCriterion("RECEIVEAMT <=", value, "receiveamt");
            return (Criteria) this;
        }

        public Criteria andReceiveamtIn(List<BigDecimal> values) {
            addCriterion("RECEIVEAMT in", values, "receiveamt");
            return (Criteria) this;
        }

        public Criteria andReceiveamtNotIn(List<BigDecimal> values) {
            addCriterion("RECEIVEAMT not in", values, "receiveamt");
            return (Criteria) this;
        }

        public Criteria andReceiveamtBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("RECEIVEAMT between", value1, value2, "receiveamt");
            return (Criteria) this;
        }

        public Criteria andReceiveamtNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("RECEIVEAMT not between", value1, value2, "receiveamt");
            return (Criteria) this;
        }

        public Criteria andRecversionIsNull() {
            addCriterion("RECVERSION is null");
            return (Criteria) this;
        }

        public Criteria andRecversionIsNotNull() {
            addCriterion("RECVERSION is not null");
            return (Criteria) this;
        }

        public Criteria andRecversionEqualTo(BigDecimal value) {
            addCriterion("RECVERSION =", value, "recversion");
            return (Criteria) this;
        }

        public Criteria andRecversionNotEqualTo(BigDecimal value) {
            addCriterion("RECVERSION <>", value, "recversion");
            return (Criteria) this;
        }

        public Criteria andRecversionGreaterThan(BigDecimal value) {
            addCriterion("RECVERSION >", value, "recversion");
            return (Criteria) this;
        }

        public Criteria andRecversionGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("RECVERSION >=", value, "recversion");
            return (Criteria) this;
        }

        public Criteria andRecversionLessThan(BigDecimal value) {
            addCriterion("RECVERSION <", value, "recversion");
            return (Criteria) this;
        }

        public Criteria andRecversionLessThanOrEqualTo(BigDecimal value) {
            addCriterion("RECVERSION <=", value, "recversion");
            return (Criteria) this;
        }

        public Criteria andRecversionIn(List<BigDecimal> values) {
            addCriterion("RECVERSION in", values, "recversion");
            return (Criteria) this;
        }

        public Criteria andRecversionNotIn(List<BigDecimal> values) {
            addCriterion("RECVERSION not in", values, "recversion");
            return (Criteria) this;
        }

        public Criteria andRecversionBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("RECVERSION between", value1, value2, "recversion");
            return (Criteria) this;
        }

        public Criteria andRecversionNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("RECVERSION not between", value1, value2, "recversion");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table FIP.XFAPPCOMMBATCH
     *
     * @mbggenerated do_not_delete_during_merge Sat Aug 13 21:38:48 CST 2011
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table FIP.XFAPPCOMMBATCH
     *
     * @mbggenerated Sat Aug 13 21:38:48 CST 2011
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}